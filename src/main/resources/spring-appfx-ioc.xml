<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- appfx-ioc相关测试 -->

	<!-- PropertyPlaceholderConfigurer：在启动最后，可以通过占位符，读取peoperties文件属性填充bean的property -->
	<bean id="springProPlaCfg"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	<!-- PropertyOverrideConfigurer：通过定义属性文件，修改spring配置文件中指定的属性值 -->
	<bean id="springProOveCfg"
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="location" value="classpath:spring-adjustment.properties" />
	</bean>
	<!-- CustomEditorConfigurer：指定bean中property属性值的自动类型转换 -->
	<bean id="springCusEdiCfg"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<!-- spring2.0配置 --><!-- <property name="customEditors"> <map> <entry key="java.util.Date"> 
			<ref bean="dateProEditor" /> </entry> </map> </property> -->
		<!-- spring2.0之后推荐配置 -->
		<property name="propertyEditorRegistrars">
			<list>
				<ref bean="dateProEdiReg" />
			</list>
		</property>
	</bean>
	<bean id="dateProEdiReg"
		class="com.bdsoft.bdceo.spring.appfx.DatePropertyEditorRegistar">
		<property name="pe" ref="dateProEditor"></property>
	</bean>
	<bean id="dateProEditor" class="com.bdsoft.bdceo.spring.appfx.DatePropertyEditor">
		<property name="dateFmt">
			<value>yyyy/MM/dd</value>
		</property>
	</bean>
	<!-- BeanPostProcessor：对象实例化过程中增强支持,容器自动加载 -->
	<bean id="pwdDecPP"
		class="com.bdsoft.bdceo.spring.appfx.PasswordDecodePostProcessor">
	</bean>


	<bean id="newsBean" class="com.bdsoft.bdceo.spring.appfx.FXNewsBean"
		scope="prototype" />
	<bean id="djNewsListener" name="newsListener/DowJones"
		class="com.bdsoft.bdceo.spring.appfx.DowJonesNewsListener" />
	<!-- bean的别名 -->
	<alias name="djNewsListener" alias="a listener implement from FXNewsListener" />
	<bean id="djNewsPersister" class="com.bdsoft.bdceo.spring.appfx.DowJonesNewsPersister" />

	<bean id="mockNewsPersister" class="com.bdsoft.bdceo.spring.appfx.MockNewsPersister">
		<property name="newsBean" ref="newsBean" />
		<!-- 方法注入，name：方法名，bean：注入bean -->
		<lookup-method name="getNewsBean" bean="newsBean" />
	</bean>

	<!-- ObjectFactoryCreatingFactoryBean实现指定对象的自动创建 -->
	<bean id="testNewsPersister" class="com.bdsoft.bdceo.spring.appfx.TestNewsPersister">
		<property name="newsBeanFactory" ref="newsBeanFactoryBean" />
	</bean>
	<bean id="newsBeanFactoryBean"
		class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
		<!-- 固定属性名，指定要创建的beanName，通过idref指定名字，在容器内查找 -->
		<property name="targetBeanName">
			<idref bean="newsBean" />
		</property>
	</bean>

	<bean id="newsProvider" class="com.bdsoft.bdceo.spring.appfx.FXNewsProvider">
		<!-- 构造函数注入 -->
		<!-- <constructor-arg index="0" ref="djNewsListener" /> <constructor-arg 
			index="1" ref="newsPersister" /> -->
		<!-- setter方式注入 -->
		<property name="newsListener" ref="djNewsListener" />
		<property name="newsPersister" ref="djNewsPersister" />
		<!-- 方法替换，name指定方法名，replacer指定替换程序实现类 -->
		<!-- <replaced-method name="getAndPersistNews" replacer="providerReplacer" 
			/> -->

		<property name="clientId">
			<value>20130119</value>
		</property>
		<property name="baseUrl" value="${baseURL}" />
		<property name="addDate" value="2013/01/19" />
	</bean>
	<!-- 方法替换实现类 -->
	<bean id="providerReplacer"
		class="com.bdsoft.bdceo.spring.appfx.FXNewsProviderMethodReplacer" />

	<!-- 静态工厂：factory-method指定实例获取方法 -->
	<bean id="bar" class="com.bdsoft.bdceo.spring.appfx.StaticFactory"
		factory-method="getBarImpl" />
	<!-- 非静态工厂：factory-bean指定非静态工厂类 -->
	<bean id="nsFactory" class="com.bdsoft.bdceo.spring.appfx.NonStaticFactory" />
	<bean id="barN" factory-bean="nsFactory" factory-method="getBarImpl" />
	<!-- FactoryBean -->
	<bean id="barD" factory-bean="nsFactory" factory-method="getBarImpl">
		<property name="nextDay" ref="nextDayDate" />
	</bean>
	<bean id="nextDayDate" class="com.bdsoft.bdceo.spring.appfx.NextDayDateFactoryBean" />

	<!-- 容器内部的事件发布 -->
	<bean id="evtPublish" class="com.bdsoft.bdceo.spring.appfx.MethodEventPubllish" />
	<bean id="evtListener" class="com.bdsoft.bdceo.spring.appfx.MethodListener" />
</beans>
